# Production Dockerfile for Compiler service
FROM node:18-alpine AS compiler

WORKDIR /app

# Install system dependencies for code compilation
RUN apk add --no-cache \
    gcc \
    g++ \
    python3 \
    make \
    libc-dev \
    openjdk17 \
    nodejs \
    npm

# Install Python and pip
RUN apk add --no-cache python3 py3-pip

# Install additional Python packages if needed
RUN pip3 install --no-cache-dir numpy pandas

# Copy package files
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Copy compiler source code
COPY . .

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S compiler -u 1001

# Change ownership of the app directory
RUN chown -R compiler:nodejs /app
USER compiler

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node healthcheck.js || exit 1

EXPOSE 8000

# Start the compiler service
CMD ["node", "index.js"]
