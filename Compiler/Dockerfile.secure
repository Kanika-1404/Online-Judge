# Secure Compiler Service with Sandboxing
FROM ubuntu:22.04 AS secure-compiler

# Prevent interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive

# Install security tools and compilers
RUN apt-get update && apt-get install -y \
    # Core compilers and interpreters
    gcc \
    g++ \
    python3 \
    python3-pip \
    openjdk-17-jdk \
    nodejs \
    npm \
    # Security and sandboxing tools
    isolate \
    nsjail \
    # System utilities
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js 18 LTS
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs && \
    rm -rf /var/lib/apt/lists/*

# Set up isolate configuration
RUN mkdir -p /var/local/lib/isolate && \
    mkdir -p /var/local/lib/isolate/cgroups && \
    chmod 711 /var/local/lib/isolate

# Create isolated execution directories
RUN mkdir -p /app/codes /app/outputs /app/sandbox

# Set up compiler service
WORKDIR /app

# Copy package files
COPY package*.json ./
RUN npm ci --only=production

# Copy compiler source code
COPY . .

# Create non-root user for the compiler service
RUN useradd -r -s /bin/false compiler && \
    chown -R compiler:compiler /app && \
    chmod 755 /app

# Configure resource limits and security
RUN echo "compiler soft nproc 100" >> /etc/security/limits.conf && \
    echo "compiler hard nproc 100" >> /etc/security/limits.conf && \
    echo "compiler soft nofile 1024" >> /etc/security/limits.conf && \
    echo "compiler hard nofile 2048" >> /etc/security/limits.conf

# Switch to non-root user
USER compiler

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

# Start the compiler service
CMD ["node", "index.js"]
